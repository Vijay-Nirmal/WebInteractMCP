name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

env:
  DOCKER_IMAGE: vijaynirmalpon/web-intract-mcp-server
  DOCKERFILE_PATH: ./server/Dockerfile
  CSPROJ_PATH: ./server/WebIntractMCPServer/WebIntractMCPServer.csproj

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      release-type: ${{ steps.determine-release.outputs.release_type }}
      build-version: ${{ steps.determine-release.outputs.build_version }}
      tags: ${{ steps.determine-release.outputs.tags }}
      is-production: ${{ steps.determine-release.outputs.is_production }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from csproj
        id: extract-version
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' ${{ env.CSPROJ_PATH }})
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "🔖 Extracted version: $VERSION"

      - name: Determine release type and tags
        id: determine-release
        run: |
          # Default to preview for push events, use input for manual dispatch
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TYPE="${{ github.event.inputs.release_type }}"
          else
            RELEASE_TYPE="preview"
          fi
          
          VERSION="${{ steps.extract-version.outputs.version }}"
          
          if [ "$RELEASE_TYPE" = "production" ]; then
            TAGS="${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:$VERSION"
            BUILD_VERSION="$VERSION"
            IS_PRODUCTION="true"
          else
            PREVIEW_VERSION="$VERSION-preview.${{ github.run_number }}"
            TAGS="${{ env.DOCKER_IMAGE }}:preview,${{ env.DOCKER_IMAGE }}:$PREVIEW_VERSION"
            BUILD_VERSION="$PREVIEW_VERSION"
            IS_PRODUCTION="false"
          fi
          
          echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT
          echo "is_production=$IS_PRODUCTION" >> $GITHUB_OUTPUT
          
          echo "📋 Release Configuration:"
          echo "   Release Type: $RELEASE_TYPE"
          echo "   Build Version: $BUILD_VERSION"
          echo "   Docker Tags: $TAGS"
          echo "   Is Production: $IS_PRODUCTION"

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ${{ env.DOCKERFILE_PATH }}
          push: false
          tags: ${{ steps.determine-release.outputs.tags }}
          labels: |
            org.opencontainers.image.version=${{ steps.determine-release.outputs.build_version }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
            org.opencontainers.image.build.number=${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/docker-image.tar

      - name: Upload Docker image artifact
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/docker-image.tar
          retention-days: 1

  deploy:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    environment: 
      name: ${{ needs.build.outputs.is-production == 'true' && 'production' || 'preview' }}
      url: https://hub.docker.com/r/vijaynirmalpon/web-intract-mcp-server
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/docker-image.tar
          docker image ls -a

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: vijaynirmalpon
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          echo "🚀 Pushing images to Docker Hub..."
          IFS=',' read -ra TAGS_ARRAY <<< "${{ needs.build.outputs.tags }}"
          for tag in "${TAGS_ARRAY[@]}"; do
            echo "📤 Pushing: $tag"
            docker push "$tag"
          done

      - name: Run Docker Scout security scan
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.build-version }}
          only-severities: critical,high
          exit-code: false
        env:
          DOCKER_SCOUT_HUB_USER: vijaynirmalpon
          DOCKER_SCOUT_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: vijaynirmalpon
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: vijaynirmalpon/web-intract-mcp-server
          readme-filepath: ./README.md

  summary:
    name: Generate Summary
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
      - name: Generate Job Summary
        run: |
          echo "## 🐳 Docker Build & Deploy Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Project:** WebIntract MCP Server" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.build.outputs.build-version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Release Type:** ${{ needs.build.outputs.release-type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Status:** ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "**Deploy Status:** ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ needs.deploy.result }}" = "success" ]; then
              echo "### ✅ Deployment Successful" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Docker Images Published:**" >> $GITHUB_STEP_SUMMARY
              IFS=',' read -ra TAGS_ARRAY <<< "${{ needs.build.outputs.tags }}"
              for tag in "${TAGS_ARRAY[@]}"; do
                echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
              done
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### 🚀 Usage" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              if [ "${{ needs.build.outputs.is-production }}" = "true" ]; then
                echo "docker pull ${{ env.DOCKER_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
              else
                echo "docker pull ${{ env.DOCKER_IMAGE }}:preview" >> $GITHUB_STEP_SUMMARY
              fi
              echo '```' >> $GITHUB_STEP_SUMMARY
            elif [ "${{ needs.deploy.result }}" = "failure" ]; then
              echo "### ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "The build was successful but deployment failed. Check the deploy job logs for details." >> $GITHUB_STEP_SUMMARY
            elif [ "${{ needs.deploy.result }}" = "skipped" ]; then
              echo "### ⏭️ Deployment Skipped" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Deployment was skipped due to conditions not being met." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "**Deploy Status:** Skipped (not on master branch)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ℹ️ Build Only (Non-master branch)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Docker image was built successfully but not pushed to DockerHub because this is not the master branch." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Would have been tagged as:**" >> $GITHUB_STEP_SUMMARY
            IFS=',' read -ra TAGS_ARRAY <<< "${{ needs.build.outputs.tags }}"
            for tag in "${TAGS_ARRAY[@]}"; do
              echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
            done
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Docker Hub Repository](https://hub.docker.com/r/vijaynirmalpon/web-intract-mcp-server)" >> $GITHUB_STEP_SUMMARY
          echo "- [Documentation](https://github.com/Vijay-Nirmal/WebIntractMCP)" >> $GITHUB_STEP_SUMMARY
